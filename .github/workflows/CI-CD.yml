name: ChatGPT-5 CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.7, 3.8, 3.9, 3.10]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Lint Code
      run: |
        pip install flake8
        flake8 .

    - name: Run Tests with Coverage
      run: |
        pip install coverage
        coverage run manage.py test
        coverage report
      env:
        DJANGO_SETTINGS_MODULE: myproject.settings

    - name: Deploy to Vercel
      env:
        VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
        VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
        META_TAG: ${{ github.sha }}  # Use commit SHA as meta tag
      run: |
        # Install Vercel CLI if needed
        npm install -g vercel
        # Deploy to Vercel with commit SHA as meta
        vercel --token $VERCEL_TOKEN --confirm --prod --meta base_hash=$META_TAG

    - name: Cleanup old Vercel deployments
      env:
        VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
        VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
        META_TAG: ${{ github.sha }}
      run: |
        chmod +x ./scripts/cleanup-vercel.sh
        ./scripts/cleanup-vercel.sh --keep 3
